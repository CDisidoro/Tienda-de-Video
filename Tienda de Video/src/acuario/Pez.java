/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package acuario;

import Conector.PostgreSQL;
import static Conector.PostgreSQL.consultar;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Camilo D'isidoro
 */
public class Pez extends javax.swing.JFrame {
    ResultSet especie=null;
    /**
     * Creates new form Pez
     */
    public Pez() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTextField1 = new javax.swing.JTextField();
        guardar = new javax.swing.JButton();
        buscar = new javax.swing.JButton();
        eliminar = new javax.swing.JButton();
        modificar = new javax.swing.JButton();
        volver = new javax.swing.JButton();
        limpiar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        colorCampo = new javax.swing.JTextField();
        codigo = new javax.swing.JLabel();
        nombre = new javax.swing.JLabel();
        color = new javax.swing.JLabel();
        codigoCampo = new javax.swing.JTextField();
        nombreCampo = new javax.swing.JTextField();
        peso = new javax.swing.JLabel();
        pesoCampo = new javax.swing.JTextField();
        especieTexto = new javax.swing.JLabel();
        tanque = new javax.swing.JLabel();
        especieCampo = new javax.swing.JTextField();
        tanqueCampo = new javax.swing.JTextField();

        jTextField1.setText("jTextField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Pez");
        setResizable(false);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        buscar.setText("Buscar");
        buscar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buscarActionPerformed(evt);
            }
        });

        eliminar.setText("Eliminar");
        eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eliminarActionPerformed(evt);
            }
        });

        modificar.setText("Modificar");
        modificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                modificarActionPerformed(evt);
            }
        });

        volver.setText("Regresar");
        volver.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                volverActionPerformed(evt);
            }
        });

        limpiar.setText("Limpiar");
        limpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                limpiarActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Mantenimiento Peces");

        codigo.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        codigo.setText("Codigo");

        nombre.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nombre.setText("Nombre");

        color.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        color.setText("Color");

        peso.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        peso.setText("Peso");

        especieTexto.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        especieTexto.setText("Especie");

        tanque.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        tanque.setText("Tanque");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(133, 133, 133))
            .addGroup(layout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(pesoCampo)
                    .addComponent(peso, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(guardar, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buscar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(codigoCampo)
                    .addComponent(codigo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(limpiar, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE)
                    .addComponent(modificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombre, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(nombreCampo)
                    .addComponent(especieTexto, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(especieCampo, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(volver, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(eliminar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(colorCampo)
                    .addComponent(color, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tanque, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tanqueCampo))
                .addContainerGap(54, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(28, 28, 28)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigo)
                            .addComponent(nombre))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(codigoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nombreCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(peso)
                            .addComponent(especieTexto))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(pesoCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(especieCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(tanqueCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(guardar)
                            .addComponent(modificar))
                        .addGap(58, 58, 58)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buscar)
                            .addComponent(limpiar)))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                        .addComponent(color)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(colorCampo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(tanque)
                        .addGap(98, 98, 98)
                        .addComponent(eliminar)
                        .addGap(58, 58, 58)
                        .addComponent(volver)))
                .addGap(50, 50, 50))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
        if("".equals(codigoCampo.getText()) || "".equals(nombreCampo.getText()) || "".equals(colorCampo.getText()) || "".equals(pesoCampo.getText()) || "".equals(especieCampo.getText()) || "".equals(tanqueCampo.getText()) ){
                JOptionPane.showMessageDialog( null, "Guardado Fallido\nAsegurese de completar todos los campos","Guardado Fallido",JOptionPane.ERROR_MESSAGE );
        }else{
            if(Validador.numeros(codigoCampo.getText()) == 0 || Validador.numeros(pesoCampo.getText()) == 0 || Validador.numeros(especieCampo.getText()) == 0 || Validador.numeros(tanqueCampo.getText()) == 0){
                JOptionPane.showMessageDialog( null, "Dato Erroneo\nSolo coloque numeros en los campos Codigo y Volumen","Dato Erroneo",JOptionPane.ERROR_MESSAGE );
            }else{
                
                    int cod = Integer.parseInt(codigoCampo.getText());
                    int peso = Integer.parseInt(pesoCampo.getText());
                    int especie = Integer.parseInt(especieCampo.getText());
                    int tanque = Integer.parseInt(tanqueCampo.getText());
                    String nom = nombreCampo.getText();
                    String color = colorCampo.getText();
                    
                    String sql = "INSERT INTO pez (idpez,nombrepez,colorpez,pesopez,idesp,idtan) VALUES ("+cod+",'"+nom+"','"+color+"',"+peso+","+especie+","+tanque+");";
                    
                    if(PostgreSQL.actualizar(sql)==1){
                    JOptionPane.showMessageDialog( null, "Guardado Exitoso\nSe ha guardado con éxito el pez nuevo","Guardado Exitoso",JOptionPane.INFORMATION_MESSAGE );
                    }else{
                    JOptionPane.showMessageDialog( null, "Guardado Fallido\nVerifique que el código no haya sido ingresado para otro pez\nY de que los codigos de la Especie y el tanque sean correctos","Guardado Fallido",JOptionPane.ERROR_MESSAGE );
                    }
            }
        }
    }//GEN-LAST:event_guardarActionPerformed

    private void volverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_volverActionPerformed
        dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_volverActionPerformed

    private void limpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_limpiarActionPerformed
        codigoCampo.setText(null);
        nombreCampo.setText(null);
        colorCampo.setText(null);
        pesoCampo.setText(null);
        especieCampo.setText(null);
        tanqueCampo.setText(null);
        codigoCampo.requestFocus();
    }//GEN-LAST:event_limpiarActionPerformed

    private void modificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_modificarActionPerformed
        if("".equals(codigoCampo.getText()) || "".equals(nombreCampo.getText()) || "".equals(colorCampo.getText()) || "".equals(colorCampo.getText()) || "".equals(pesoCampo.getText()) || "".equals(especieCampo.getText()) || "".equals(tanqueCampo.getText())){
                JOptionPane.showMessageDialog( null, "Actualizacion Fallido\nAsegurese de completar todos los campos","Actualizacion Fallido",JOptionPane.ERROR_MESSAGE );
            }else{
                if(Validador.numeros(codigoCampo.getText()) == 0 || Validador.numeros(pesoCampo.getText()) == 0 || Validador.numeros(especieCampo.getText()) == 0|| Validador.numeros(tanqueCampo.getText()) == 0){
                JOptionPane.showMessageDialog( null, "Dato Erroneo\nSolo digite numeros enlos campos:\nCodigo,Peso,Especie,Tanque","Dato Erroneo",JOptionPane.ERROR_MESSAGE );
                }else{
                    int cod = Integer.parseInt(codigoCampo.getText());
                    int peso = Integer.parseInt(pesoCampo.getText());
                    int tanque = Integer.parseInt(tanqueCampo.getText());
                    int especie = Integer.parseInt(especieCampo.getText());
                    String nombre = nombreCampo.getText();
                    String color = colorCampo.getText();
                    String sql = "UPDATE pez SET nombrepez='"+nombre+"',colorpez='"+color+"',pesopez="+peso+",idesp="+especie+",idtan="+tanque+" WHERE idpez="+cod+";";
                    if(PostgreSQL.actualizar(sql)==1){
                    JOptionPane.showMessageDialog( null, "Actualizacion Exitosa\nSe ha actualizado con éxito el pez","Actualizacion Exitosa",JOptionPane.INFORMATION_MESSAGE );
                    }else{
                    JOptionPane.showMessageDialog( null, "Actualizacion Fallida\nVerifique que el código haya sido ingresado para un pez","Actualizacion Fallida",JOptionPane.ERROR_MESSAGE );
                    }
                }
        }
    }//GEN-LAST:event_modificarActionPerformed

    private void eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eliminarActionPerformed
        if("".equalsIgnoreCase(codigoCampo.getText())){
                JOptionPane.showMessageDialog( null, "Borrado Fallido\nAsegurese de completar el campo:\nCodigo","Borrado Fallido",JOptionPane.ERROR_MESSAGE );
        }else{
            if(Validador.numeros(codigoCampo.getText()) == 0){
                JOptionPane.showMessageDialog( null, "Dato Erroneo\nSolo digite numeros en el campo Codigo","Dato Erroneo",JOptionPane.ERROR_MESSAGE );
            }else{
                    int cod = Integer.parseInt(codigoCampo.getText());
                    String sql="DELETE FROM pez WHERE idpez="+cod;
                    if(PostgreSQL.actualizar(sql)==1){
                    JOptionPane.showMessageDialog( null, "Borrado Exitoso\nSe ha borado con éxito el pez","Borrado Exitoso",JOptionPane.INFORMATION_MESSAGE );
                    }else{
                    JOptionPane.showMessageDialog( null, "Borrado Fallido\nVerifique que el código haya sido ingresado para un pez","Borrado Fallido",JOptionPane.ERROR_MESSAGE );
                    }
            }
        }
    }//GEN-LAST:event_eliminarActionPerformed

    private void buscarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buscarActionPerformed
        ResultSet datos = null;
        buscar tabla;
        if("".equalsIgnoreCase(nombreCampo.getText())==false){
            String sql="SELECT nombrepez,colorpez,pesopez FROM pez WHERE nombrepez='"+nombreCampo.getText()+"';";
            tabla = new buscar(sql,new Object[]{"Nombre","Color","Peso"},3);
            tabla.setVisible(true);
        }else if("".equalsIgnoreCase(colorCampo.getText())==false){
            String sql="SELECT nombrepez,colorpez,pesopez FROM pez WHERE colorpez='"+colorCampo.getText()+"';";
            tabla = new buscar(sql,new Object[]{"Nombre","Color","Peso"},3);
            tabla.setVisible(true);
        }else if("".equalsIgnoreCase(pesoCampo.getText())==false){
            String sql="SELECT nombrepez,colorpez,pesopez FROM pez WHERE pesopez='"+pesoCampo.getText()+"';";
            tabla = new buscar(sql,new Object[]{"Nombre","Color","Peso"},3);
            tabla.setVisible(true);
        }else{
                JOptionPane.showMessageDialog( null, "Busqueda Fallida\nAsegurese de completar cualquiera de los 3 campos:\nNombre,Color,Tanque","Busqueda Fallida",JOptionPane.ERROR_MESSAGE );
        }
    }//GEN-LAST:event_buscarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pez.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pez().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buscar;
    private javax.swing.JLabel codigo;
    private javax.swing.JTextField codigoCampo;
    private javax.swing.JLabel color;
    private javax.swing.JTextField colorCampo;
    private javax.swing.JButton eliminar;
    private javax.swing.JTextField especieCampo;
    private javax.swing.JLabel especieTexto;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton limpiar;
    private javax.swing.JButton modificar;
    private javax.swing.JLabel nombre;
    private javax.swing.JTextField nombreCampo;
    private javax.swing.JLabel peso;
    private javax.swing.JTextField pesoCampo;
    private javax.swing.JLabel tanque;
    private javax.swing.JTextField tanqueCampo;
    private javax.swing.JButton volver;
    // End of variables declaration//GEN-END:variables
}
